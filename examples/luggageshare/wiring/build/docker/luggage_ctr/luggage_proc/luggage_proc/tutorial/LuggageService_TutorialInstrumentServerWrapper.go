// Blueprint: Auto-generated by Tutorial Plugin
package tutorial

import (
	"context"
	"log"
	"github.com/blueprint-uservices/cldrel_course/luggageshare/workflow"
)

type LuggageService_TutorialInstrumentServerWrapper struct {
	Service workflow.LuggageService
}

func New_LuggageService_TutorialInstrumentServerWrapper(ctx context.Context, service workflow.LuggageService) (*LuggageService_TutorialInstrumentServerWrapper, error) {
	handler := &LuggageService_TutorialInstrumentServerWrapper{}
	handler.Service = service
	return handler, nil
}


func (handler *LuggageService_TutorialInstrumentServerWrapper) AddItem(ctx context.Context, item workflow.LuggageItem) (error) {
	log.Println("Processing AddItem")
	return handler.Service.AddItem(ctx, item)
}

func (handler *LuggageService_TutorialInstrumentServerWrapper) Cleanup(ctx context.Context) (error) {
	log.Println("Processing Cleanup")
	return handler.Service.Cleanup(ctx)
}

func (handler *LuggageService_TutorialInstrumentServerWrapper) FindItems(ctx context.Context, color string, length int64, breadth int64, height int64, price float64) ([]workflow.LuggageItem, error) {
	log.Println("Processing FindItems")
	return handler.Service.FindItems(ctx, color, length, breadth, height, price)
}

func (handler *LuggageService_TutorialInstrumentServerWrapper) GetItemById(ctx context.Context, id string) (workflow.LuggageItem, error) {
	log.Println("Processing GetItemById")
	return handler.Service.GetItemById(ctx, id)
}

