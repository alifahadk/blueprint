// Blueprint: Auto-generated by Tutorial Plugin
package tutorial

import (
	"github.com/blueprint-uservices/cldrel_course/luggageshare/workflow"
	"context"
	"log"
)

type FrontendService_TutorialInstrumentServerWrapper struct {
	Service workflow.FrontendService
}

func New_FrontendService_TutorialInstrumentServerWrapper(ctx context.Context, service workflow.FrontendService) (*FrontendService_TutorialInstrumentServerWrapper, error) {
	handler := &FrontendService_TutorialInstrumentServerWrapper{}
	handler.Service = service
	return handler, nil
}


func (handler *FrontendService_TutorialInstrumentServerWrapper) AddItem(ctx context.Context, color string, length int64, breadth int64, height int64, price float64, username string) (string, error) {
	log.Println("Processing AddItem")
	return handler.Service.AddItem(ctx, color, length, breadth, height, price, username)
}

func (handler *FrontendService_TutorialInstrumentServerWrapper) CreateUserProfile(ctx context.Context, username string, email string, address string) (error) {
	log.Println("Processing CreateUserProfile")
	return handler.Service.CreateUserProfile(ctx, username, email, address)
}

func (handler *FrontendService_TutorialInstrumentServerWrapper) MakeReservation(ctx context.Context, luggageid string, username string, startdate string, enddate string) (bool, error) {
	log.Println("Processing MakeReservation")
	return handler.Service.MakeReservation(ctx, luggageid, username, startdate, enddate)
}

func (handler *FrontendService_TutorialInstrumentServerWrapper) Search(ctx context.Context, color string, length int64, breadth int64, height int64, price float64, startDate string, endDate string) ([]workflow.LuggageInfo, error) {
	log.Println("Processing Search")
	return handler.Service.Search(ctx, color, length, breadth, height, price, startDate, endDate)
}

func (handler *FrontendService_TutorialInstrumentServerWrapper) WriteReview(ctx context.Context, luggageid string, text string, username string, rating int64) (error) {
	log.Println("Processing WriteReview")
	return handler.Service.WriteReview(ctx, luggageid, text, username, rating)
}

