// Blueprint: Auto-generated by HealthChecker Plugin
package healthcheck

import (
	"context"
	"github.com/blueprint-uservices/cldrel_course/luggageshare/workflow"
)

type UserProfileService_HealthChecker interface {
	AddItem(ctx context.Context, username string, item_id string) (error)
	Cleanup(ctx context.Context) (error)
	GetUserItemIds(ctx context.Context, username string) ([]string, error)
	GetUserProfile(ctx context.Context, username string) (workflow.UserProfile, error)
	Health(ctx context.Context) (string, error)
	UpdateUserProfile(ctx context.Context, profile workflow.UserProfile) (error)
	
}

type UserProfileService_HealthCheckHandler struct {
	Service workflow.UserProfileService
}

func New_UserProfileService_HealthCheckHandler(ctx context.Context, service workflow.UserProfileService) (*UserProfileService_HealthCheckHandler, error) {
	handler := &UserProfileService_HealthCheckHandler{}
	handler.Service = service
	return handler, nil
}


func (handler *UserProfileService_HealthCheckHandler) AddItem(ctx context.Context, username string, item_id string) (error) {
	return handler.Service.AddItem(ctx, username, item_id)
}

func (handler *UserProfileService_HealthCheckHandler) Cleanup(ctx context.Context) (error) {
	return handler.Service.Cleanup(ctx)
}

func (handler *UserProfileService_HealthCheckHandler) GetUserItemIds(ctx context.Context, username string) ([]string, error) {
	return handler.Service.GetUserItemIds(ctx, username)
}

func (handler *UserProfileService_HealthCheckHandler) GetUserProfile(ctx context.Context, username string) (workflow.UserProfile, error) {
	return handler.Service.GetUserProfile(ctx, username)
}

func (handler *UserProfileService_HealthCheckHandler) UpdateUserProfile(ctx context.Context, profile workflow.UserProfile) (error) {
	return handler.Service.UpdateUserProfile(ctx, profile)
}

func (handler *UserProfileService_HealthCheckHandler) Health(ctx context.Context) (string, error) {
	return "Healthy", nil
}
