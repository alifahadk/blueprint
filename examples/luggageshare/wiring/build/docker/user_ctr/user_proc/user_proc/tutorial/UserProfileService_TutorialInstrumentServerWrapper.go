// Blueprint: Auto-generated by Tutorial Plugin
package tutorial

import (
	"context"
	"log"
	"github.com/blueprint-uservices/cldrel_course/luggageshare/workflow"
)

type UserProfileService_TutorialInstrumentServerWrapper struct {
	Service workflow.UserProfileService
}

func New_UserProfileService_TutorialInstrumentServerWrapper(ctx context.Context, service workflow.UserProfileService) (*UserProfileService_TutorialInstrumentServerWrapper, error) {
	handler := &UserProfileService_TutorialInstrumentServerWrapper{}
	handler.Service = service
	return handler, nil
}


func (handler *UserProfileService_TutorialInstrumentServerWrapper) AddItem(ctx context.Context, username string, item_id string) (error) {
	log.Println("Processing AddItem")
	return handler.Service.AddItem(ctx, username, item_id)
}

func (handler *UserProfileService_TutorialInstrumentServerWrapper) Cleanup(ctx context.Context) (error) {
	log.Println("Processing Cleanup")
	return handler.Service.Cleanup(ctx)
}

func (handler *UserProfileService_TutorialInstrumentServerWrapper) GetUserItemIds(ctx context.Context, username string) ([]string, error) {
	log.Println("Processing GetUserItemIds")
	return handler.Service.GetUserItemIds(ctx, username)
}

func (handler *UserProfileService_TutorialInstrumentServerWrapper) GetUserProfile(ctx context.Context, username string) (workflow.UserProfile, error) {
	log.Println("Processing GetUserProfile")
	return handler.Service.GetUserProfile(ctx, username)
}

func (handler *UserProfileService_TutorialInstrumentServerWrapper) UpdateUserProfile(ctx context.Context, profile workflow.UserProfile) (error) {
	log.Println("Processing UpdateUserProfile")
	return handler.Service.UpdateUserProfile(ctx, profile)
}

