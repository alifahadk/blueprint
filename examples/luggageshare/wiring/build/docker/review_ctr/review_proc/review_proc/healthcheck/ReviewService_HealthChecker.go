// Blueprint: Auto-generated by HealthChecker Plugin
package healthcheck

import (
	"context"
	"github.com/blueprint-uservices/cldrel_course/luggageshare/workflow"
)

type ReviewService_HealthChecker interface {
	AddReview(ctx context.Context, review workflow.Review) (error)
	Cleanup(ctx context.Context) (error)
	GetReviewsForItem(ctx context.Context, id string) ([]workflow.Review, error)
	GetReviewsForUser(ctx context.Context, userid string) ([]workflow.Review, error)
	Health(ctx context.Context) (string, error)
	
}

type ReviewService_HealthCheckHandler struct {
	Service workflow.ReviewService
}

func New_ReviewService_HealthCheckHandler(ctx context.Context, service workflow.ReviewService) (*ReviewService_HealthCheckHandler, error) {
	handler := &ReviewService_HealthCheckHandler{}
	handler.Service = service
	return handler, nil
}


func (handler *ReviewService_HealthCheckHandler) AddReview(ctx context.Context, review workflow.Review) (error) {
	return handler.Service.AddReview(ctx, review)
}

func (handler *ReviewService_HealthCheckHandler) Cleanup(ctx context.Context) (error) {
	return handler.Service.Cleanup(ctx)
}

func (handler *ReviewService_HealthCheckHandler) GetReviewsForItem(ctx context.Context, id string) ([]workflow.Review, error) {
	return handler.Service.GetReviewsForItem(ctx, id)
}

func (handler *ReviewService_HealthCheckHandler) GetReviewsForUser(ctx context.Context, userid string) ([]workflow.Review, error) {
	return handler.Service.GetReviewsForUser(ctx, userid)
}

func (handler *ReviewService_HealthCheckHandler) Health(ctx context.Context) (string, error) {
	return "Healthy", nil
}
