// Blueprint: Auto-generated by HealthChecker Plugin
package healthcheck

import (
	"context"
	"github.com/blueprint-uservices/cldrel_course/luggageshare/workflow"
)

type ReservationService_HealthChecker interface {
	CheckAvailability(ctx context.Context, item_ids []string, startdate string, enddate string) ([]string, error)
	Cleanup(ctx context.Context) (error)
	Health(ctx context.Context) (string, error)
	MakeReservation(ctx context.Context, luggageid string, user string, startdate string, enddate string) (bool, error)
	
}

type ReservationService_HealthCheckHandler struct {
	Service workflow.ReservationService
}

func New_ReservationService_HealthCheckHandler(ctx context.Context, service workflow.ReservationService) (*ReservationService_HealthCheckHandler, error) {
	handler := &ReservationService_HealthCheckHandler{}
	handler.Service = service
	return handler, nil
}


func (handler *ReservationService_HealthCheckHandler) CheckAvailability(ctx context.Context, item_ids []string, startdate string, enddate string) ([]string, error) {
	return handler.Service.CheckAvailability(ctx, item_ids, startdate, enddate)
}

func (handler *ReservationService_HealthCheckHandler) Cleanup(ctx context.Context) (error) {
	return handler.Service.Cleanup(ctx)
}

func (handler *ReservationService_HealthCheckHandler) MakeReservation(ctx context.Context, luggageid string, user string, startdate string, enddate string) (bool, error) {
	return handler.Service.MakeReservation(ctx, luggageid, user, startdate, enddate)
}

func (handler *ReservationService_HealthCheckHandler) Health(ctx context.Context) (string, error) {
	return "Healthy", nil
}
